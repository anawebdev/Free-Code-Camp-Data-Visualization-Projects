var Header = React.createClass({
  render: function() {
    return (
      <div className="container-fluid">
        <div className="row header">
          <div className="col-sm-1" />
          <hr />
          <div className="col-sm-10">
            <h1>CoffeeBox</h1>
          </div>
          <div className="col-sm-1" />
        </div>
      </div>
    );
  }
});

var Footer = React.createClass({
  render: function() {
    return (
      <footer>
        <div className="container-fluid">
          <div className="row">
            <div className="col-sm-2" />
            <div className="col-sm-2">
              <button className="contact btn btn-block">
                <i className="fa fa-free-code-camp" aria-hidden="true" />
              </button>
            </div>
            <div className="col-sm-2">
              <button className="contact btn btn-block">
                <i className="fa fa-github" aria-hidden="true" />
              </button>
            </div>
            <div className="col-sm-2">
              <button className="contact btn btn-block">
                <i className="fa fa-twitter" aria-hidden="true" />
              </button>
            </div>
            <div className="col-sm-2">
              <button className="contact btn btn-block">
                <i className="fa fa-linkedin-square" aria-hidden="true" />
              </button>
            </div>
            <div className="col-sm-2" />
          </div>
        </div>
      </footer>
    );
  }
});

var Accordion = React.createClass({
  propTypes: {
  title: React.PropTypes.string.isRequired,
  img: React.PropTypes.string.isRequired,
  ingredients: React.PropTypes.string.isRequired,
  instructions: React.PropTypes.string.isRequired
},
  getInitialState: function() {
    if (
      localStorage.getItem("_feuerbird29_recipes") !== null &&
      localStorage.getItem("_feuerbird29_recipes") !== ""
    ) {
      return (this.state = {
        recipes: JSON.parse(localStorage.getItem("_feuerbird29_recipes"))
      });
    }
    var initialRecipes = JSON.stringify([
      {
        title: "Hot Buttered Toffee Coffee",
        img: "http://www.dunkincreamer.com/wp-content/uploads/2016/07/EnglishToffeeCoffee.png",
        ingredients: "coffee mocha ice cream, hot coffee, butterscotch topping, almond liqueur, whipped topping, toffee pieces or 14.79 ml chopped chocolate-covered english toffee bar",
        instructions: "Spoon ice cream into a large coffee mug;pour coffee, butterscotch topping and almond liqueur over ice cream. Garnish with a dollop of whipped cream and sprinkle of toffee chips."
      },
      {
        title: "Mint Espresso",
        img: "http://www.lavazza.us/default/.content/images/recipe/caffe_padovano_782x441.jpg",
        ingredients: "espresso, milk, double cream, mint syrup and cocoa powder",
        instructions: "Brew an espresso in a cappuccino cup. Add 60ml of the Mint Milk Cream. Lightly dust with bitter cocoa powder. Preparation of Mint Milk Cream (serves 2): Pour the cold whole milk into a large bowl. Add the double cream, milk and mint syrup. Whip with an electric whisk to obtain a soft fluffy mixture. We recommend preparing this recipe with espresso coffee."
      }
    ]);
    localStorage.setItem("_feuerbird29_recipes", initialRecipes);
    return {
      recipes: [
        {
          title: "Hot Buttered Toffee Coffee",
          img: "http://www.dunkincreamer.com/wp-content/uploads/2016/07/EnglishToffeeCoffee.png",
          ingredients: "coffee mocha ice cream, hot coffee, butterscotch topping, almond liqueur, whipped topping, toffee pieces or 14.79 ml chopped chocolate-covered english toffee bar",
          instructions: "Brew an espresso in a cappuccino cup. Add 60ml of the Mint Milk Cream. Lightly dust with bitter cocoa powder. Preparation of Mint Milk Cream (serves 2): Pour the cold whole milk into a large bowl. Add the double cream, milk and mint syrup. Whip with an electric whisk to obtain a soft fluffy mixture. We recommend preparing this recipe with espresso coffee."
        },
        {
          title: "Mint Espresso",
          img: "http://www.lavazza.us/default/.content/images/recipe/caffe_padovano_782x441.jpg",
          ingredients: "espresso, milk, double cream, mint syrup and cocoa powder",
          instructions: "Brew an espresso in a cappuccino cup. Add 60ml of the Mint Milk Cream. Lightly dust with bitter cocoa powder. Preparation of Mint Milk Cream (serves 2): Pour the cold whole milk into a large bowl. Add the double cream, milk and mint syrup. Whip with an electric whisk to obtain a soft fluffy mixture. We recommend preparing this recipe with espresso coffee."
        }
      ]
    };
  },
  handleEdit: function(e) {},
  handleDelete: function(e) {},
  handleSave: function(e) {
    
    var title = document.getElementById("title").value;
    var img = document.getElementById("img").value;
    var ingredients = document.getElementById("ingredients").value;
    var instructions = document.getElementById("instructions").value;
    if(title!=="" && ingredients!=="" && instructions!==""){
    var object = [
      {
        title: title,
        img: img,
        ingredients: ingredients,
        instructions: instructions
      }
    ];
    var storage = JSON.parse(localStorage.getItem("_feuerbird29_recipes"));
    object = storage.concat(object);
    localStorage.setItem("_feuerbird29_recipes", JSON.stringify(object));
    this.state = {
      recipes: object
    };
    ReactDOM.render(<RecipeBox />, document.getElementById("app"));
    }
  },
  handleTitleChange: function(e) {
    this.props.title = e.target.value;
  },
  handleImgChange: function(e) {
    this.props.img = e.target.value;
  },
  handleIngredientsChange: function(e) {
    this.props.ingredients = e.target.value;
  },
  handleInstructionsChange: function(e) {
    this.props.instructions = e.target.value;
  },

  render: function() {
    return (
      <div className="contaner-fluid main">
        <div className="row">
          <div className="col-sm-1" />
          <div className="panel-group col-sm-10">

            {/*ADD Recipe Panel*/}
            <div className="panel">
              <div className="panel-heading">
                <a data-toggle="collapse" href="#collapse2">
                  <h3 className="panel-title">
                    Add Recipe
                  </h3>
                </a>
              </div>
              <div id="collapse2" className="panel-collapse collapse">
                <div className="panel-body">
                  <form>
                    <input
                      defaultValue={this.props.title}
                      onChange={this.handleTitleChange}
                      type="text"
                      id="title"
                      placeholder="Title... (required)"
                      required="required"
                    />
                    <br />
                    <input
                      defaultValue={this.props.img}
                      onChange={this.handleImgChange}
                      type="url"
                      id="img"
                      placeholder="Image URL..."
                      required="required"
                    />
                    <br />
                    <textarea
                      defaultValue={this.props.ingredients}
                      onChange={this.handleIngredientsChange}
                      type="text"
                      id="ingredients"
                      placeholder="Ingredients... (required)"
                      required="required"
                    />
                    <br />
                    <textarea
                      defaultValue={this.props.instructions}
                      onChange={this.handleInstructionsChange}
                      type="text"
                      id="instructions"
                      placeholder="Instructions... (required)"
                      onChange={this.handleUserInput}
                      required="required"
                    />
                    <br />
                  </form>
                </div>
                <div className="panel-footer">
                  <button className="btn taskbtn" onClick={this.handleSave}>
                    Save Recipe
                  </button>
                </div>
              </div>
            </div>

            {this.state.recipes.map(function(data, index) {
              return (
                <div className="panel">

                  <div className="panel-heading">

                    <a data-toggle="collapse" href={"#" + (index + 1)}>

                      <h3 className="panel-title">

                        {data.title}

                      </h3>
                    </a>
                  </div>
                  <div id={index + 1} className="panel-collapse collapse">
                    <div className="panel-body"><img src={data.img} /></div>

                    <div className="panel-body">{data.ingredients}</div>
                    <div className="panel-body">{data.instructions}</div>
                    <div className="panel-footer">
                      <button className="btn taskbtn">
                        Edit
                      </button>
                      <button className="btn taskbtn">
                        Delete
                      </button>
                    </div>
                  </div>
                </div>
              );
            })}

          </div>
          <div className="col-sm-1" />
        </div>
      </div>
    );
  }
});

var RecipeBox = React.createClass({
  render: function() {
    return (
      <div>
        <Header />
        <Accordion />
        <Footer />
      </div>
    );
  }
});



ReactDOM.render(<RecipeBox />, document.getElementById("app"));
