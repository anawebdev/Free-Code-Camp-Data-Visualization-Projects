var Header = React.createClass({
  render: function() {
    return (
      <div className="container-fluid">
        <div className="row header">
          <div className="col-sm-12">
            <h1 id="pageTitle">CoffeeBox</h1>
          </div>
          <div className="col-sm-1" />
        </div>
      </div>
    );
  }
});

var Footer = React.createClass({
  render: function() {
    return (
      <footer className="hidden-xs">
        <div className="container-fluid">
          <div className="row">
            <div className="col-sm-2" />
            <div className="col-sm-2">
              <a target="_blank" href="https://www.freecodecamp.com/anawebdev">
                {" "}<button className="contact btn btn-block">
                  <i className="fa fa-free-code-camp" aria-hidden="true" />
                </button>
              </a>
            </div>
            <div className="col-sm-2">
              <a target="_blank" href="https://github.com/anawebdev">
                <button className="contact btn btn-block">
                  <i className="fa fa-github" aria-hidden="true" />
                </button>
              </a>
            </div>
            <div className="col-sm-2">
              <a target="_blank" href="https://twitter.com/anawebdev">
                <button className="contact btn btn-block">
                  <i className="fa fa-twitter" aria-hidden="true" />
                </button>
              </a>
            </div>
            <div className="col-sm-2">
              <a target="_blank" href="http://codepen.io/feuerbird29/">
                <button className="contact btn btn-block">
                  <i className="fa fa-codepen" aria-hidden="true" />
                </button>
              </a>
            </div>
            <div className="col-sm-2" />
          </div>
        </div>
      </footer>
    );
  }
});

var Accordion = React.createClass({
  getInitialState: function() {
    if (
      localStorage.getItem("_feuerbird29_recipes") !== null &&
      localStorage.getItem("_feuerbird29_recipes") !== ""
    ) {
      var recipes = JSON.parse(localStorage.getItem("_feuerbird29_recipes"));
      return (this.state = {
        recipes: recipes
      });
    }
    var initial = [
      {
        title: "Hot Buttered Toffee Coffee",
        img: "http://cemaradinda.com/wp-content/uploads/IMG_3358.jpg",
        ingredients: "coffee mocha ice cream, hot coffee, butterscotch topping, almond liqueur, whipped topping, toffee pieces or 14.79 ml chopped chocolate-covered english toffee bar",
        instructions: "Spoon ice cream into a large coffee mug;pour coffee, butterscotch topping and almond liqueur over ice cream. Garnish with a dollop of whipped cream and sprinkle of toffee chips."
      },
      {
        title: "Mint Espresso",
        img: "https://s-media-cache-ak0.pinimg.com/736x/c0/84/c1/c084c1c3c72d94242e404eb62f2ff848.jpg",
        ingredients: "espresso, milk, double cream, mint syrup and cocoa powder",
        instructions: "Brew an espresso in a cappuccino cup. Add 60ml of the Mint Milk Cream. Lightly dust with bitter cocoa powder. Preparation of Mint Milk Cream (serves 2): Pour the cold whole milk into a large bowl. Add the double cream, milk and mint syrup. Whip with an electric whisk to obtain a soft fluffy mixture. We recommend preparing this recipe with espresso coffee."
      },
      {
        title: "Hazelnut Coffee",
        img: "https://68.media.tumblr.com/e1274b1abdb3710716305032b0fa7d60/tumblr_onm2dmpheq1s30ko5o1_500.jpg",
        ingredients: "Frangelico Hazelnut Liqueur, Fresh Brewed Coffee, Whipped Cream, Chocolate Shavings",
        instructions: "Add ingredients to a heat resistant mug in the order given. Top with whipped cream and chocolate shavings."
      }
    ];
    localStorage.setItem("_feuerbird29_recipes", JSON.stringify(initial));
    return {
      recipes: initial
    };
  },
  handleDelete: function(e) {
    var index = e.target.id;
    var object = JSON.parse(localStorage.getItem("_feuerbird29_recipes"));
    object.splice(index, 1);
    localStorage.setItem("_feuerbird29_recipes", JSON.stringify(object));
    this.state = {
      recipes: object
    };
    ReactDOM.render(<RecipeBox />, document.getElementById("app"));
  },
  handleSave: function(e) {
    var title = document.getElementById("title").value;
    var img = document.getElementById("img").value;
    var ingredients = document.getElementById("ingredients").value;
    var instructions = document.getElementById("instructions").value;
    if (title !== "" && ingredients !== "" && instructions !== "") {
      var object = [
        {
          title: title,
          img: img,
          ingredients: ingredients,
          instructions: instructions
        }
      ];
      var storage = JSON.parse(localStorage.getItem("_feuerbird29_recipes"));
      object = storage.concat(object);
      localStorage.setItem("_feuerbird29_recipes", JSON.stringify(object));
      this.state = {
        recipes: object
      };
      ReactDOM.render(<RecipeBox />, document.getElementById("app"));
    }
  },
  handleEdit: function(e) {
    var index = e.target.value;
    var titleCopy = document.getElementById("title" + index).value;
    var imgCopy = document.getElementById("img" + index).value;
    var ingredientsCopy = document.getElementById("ingredients" + index).value;
    var instructionsCopy = document.getElementById("instructions" + index)
      .value;
    var valueObject = JSON.parse(localStorage.getItem("_feuerbird29_recipes"));
    if (valueObject[index].title !== titleCopy) {
      valueObject[index].title = titleCopy;
    }
    if (valueObject[index].img !== imgCopy) {
      valueObject[index].img = imgCopy;
    }
    if (valueObject[index].ingredients !== ingredientsCopy) {
      valueObject[index].ingredients = ingredientsCopy;
    }
    if (valueObject[index].instructions !== instructionsCopy) {
      valueObject[index].instructions = instructionsCopy;
    }
    localStorage.setItem("_feuerbird29_recipes", JSON.stringify(valueObject));
    this.state = {
      recipes: valueObject
    };
    ReactDOM.render(<RecipeBox />, document.getElementById("app"));
  },
  render: function() {
    return (
      <div className="contaner-fluid main">
        <div className="row">
          <div className="col-sm-1" />
          <div className="panel-group col-sm-10">

            {/*ADD Recipe Panel*/}
            <div className="panel">
              <div className="panel-heading">
                <a data-toggle="collapse" href="#collapse2">
                  <h3 className="panel-title">
                    Add Recipe
                  </h3>
                </a>
              </div>
              <div id="collapse2" className="panel-collapse collapse">
                <div className="panel-body">
                  <form>
                    <input
                      type="text"
                      id="title"
                      placeholder="Title... (required)"
                      maxlength="20"
                    />
                    <br />
                    <input type="url" id="img" placeholder="Image URL..." />
                    <br />
                    <textarea
                      type="text"
                      id="ingredients"
                      placeholder="Ingredients... (required)"
                    />
                    <br />
                    <textarea
                      type="text"
                      id="instructions"
                      placeholder="Instructions... (required)"
                    />
                    <br />
                  </form>
                </div>
                <div className="panel-footer">
                  <button className="btn taskbtn" onClick={this.handleSave}>
                    Save Recipe
                  </button>
                </div>
              </div>
            </div>

            {this.state.recipes.map(
              function(data, index) {
                return (
                  <div className="panel">

                    <div className="panel-heading">

                      <a data-toggle="collapse" href={"#" + (index + 1)}>

                        <h3 className="panel-title">
                          <img src={data.img} className="avatar" />

                          {data.title}

                        </h3>
                      </a>
                    </div>
                    <div id={index + 1} className="panel-collapse collapse">
                      <div className="panel-body"><img src={data.img} /></div>

                      <div className="panel-body">
                        <h4>Ingredients:</h4>

                        <p>{data.ingredients}</p>
                      </div>
                      <div className="panel-body">
                        <h4>Instructions:</h4>
                        <p>
                          {data.instructions}
                        </p>
                      </div>
                      <div className="panel-footer">
                        <button
                          className="btn taskbtn"
                          value={index}
                          data-toggle="modal"
                          data-target={"#myModal" + index}
                          id={"edit" + index}
                        >
                          Edit
                        </button>
                        <button
                          className="btn taskbtn"
                          id={index}
                          onClick={this.handleDelete}
                        >
                          Delete
                        </button>
                      </div>
                    </div>

                    <div
                      id={"myModal" + index}
                      className="modal fade"
                      role="dialog"
                    >
                      <div className="modal-dialog">
                        <div className="modal-content">
                          <div className="modal-header">
                            <h4 className="modal-title">Edit Recipe</h4>
                          </div>
                          <div className="modal-body">
                            <h4>Title: </h4>
                            <input
                              defaultValue={data.title}
                              id={"title" + index}
                            />
                          </div>
                          <div className="modal-body">
                            <h4>Image URL:</h4>
                            <input defaultValue={data.img} id={"img" + index} />
                          </div>
                          <div className="modal-body">
                            <h4>Ingredients:</h4>
                            <textarea
                              defaultValue={data.ingredients}
                              id={"ingredients" + index}
                            />
                          </div>
                          <div className="modal-body">
                            <h4>Instructions:</h4>
                            <textarea
                              defaultValue={data.instructions}
                              id={"instructions" + index}
                            />
                          </div>
                          <div className="modal-footer">
                            <button
                              type="button"
                              className="btn  taskbtn"
                              onClick={this.handleEdit}
                              value={index}
                              data-dismiss="modal"
                            >
                              Save
                            </button>
                            <button
                              type="button"
                              className="btn  taskbtn"
                              data-dismiss="modal"
                            >
                              Close
                            </button>
                          </div>
                        </div>

                      </div>
                    </div>

                  </div>
                );
              }.bind(this)
            )}
          </div>
          <div className="col-sm-1" />

        </div>

      </div>
    );
  }
});

var RecipeBox = React.createClass({
  render: function() {
    return (
      <div>
        <Header />
        <Accordion />
        <Footer />
      </div>
    );
  }
});

ReactDOM.render(<RecipeBox />, document.getElementById("app"));
